---
# tasks file for roles/aws_security_groups

- name: Create Security Group `sg_public`
  amazon.aws.ec2_group:
    vpc_id: "{{ vpc.vpc.id }}"
    # region: "{{ vpc_region }}" # not needed with vpc_id
    name: sg_public
    description: Public Access Security Group
    rules:
      - rule_desc: ICMP
        proto: icmp
        from_port: -1
        to_port: -1
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 0
        to_port: 65535
        cidr_ip: 0.0.0.0/0
        rule_desc: Allow everything TCP
      - proto: udp
        from_port: 0
        to_port: 65535
        cidr_ip: 0.0.0.0/0
        rule_desc: Allow everything UDP
    # rules_egress:
    #   - proto: any
    #     cidr_ip: 0.0.0.0/0    # any
    #     rule_desc: Any
    tags:
      Name: sg_public
      owner: "{{ owner }}"
      project: "{{ project_name | default('') }}"
      started: "{{ '%Y%m%dT%H%M%S-%Z' | strftime }}"
  register: sg_public

- name: Create Security Group `sg_ise_basic`
  amazon.aws.ec2_group:
    vpc_id: "{{ vpc.vpc.id }}"
    # region: "{{ vpc_region }}" # not needed with vpc_id
    state: present
    name: sg_ise_basic
    description: sg_ise_basic
    rules:
      - rule_desc: ICMP
        proto: icmp
        from_port: -1
        to_port: -1
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: HTTP
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: HTTPS
      - proto: udp
        from_port: 1812
        to_port: 1813
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: RADIUS Auth & Acct
      - proto: udp
        from_port: 1645
        to_port: 1646
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: RADIUS Auth & Acct (Old!)
      - proto: tcp
        from_port: 9060
        to_port: 9060
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: ERS API
    # rules_egress:
    #   - proto: any
    #     cidr_ip: 0.0.0.0/0    # any
    #     rule_desc: Any
    tags:
      Name: sg_ise_basic
      owner: "{{ owner }}"
      project: "{{ project_name }}"
      started: "{{ '%Y%m%dT%H%M%S-%Z' | strftime }}"
  register: sg_ise_basic

- name: Create Security Group `sg_icmp_ssh_www`
  amazon.aws.ec2_group:
    name: sg_icmp_ssh_www
    description: Allow Ping and SSH to Linux VM
    vpc_id: "{{ vpc.vpc.id }}"
    # region: "{{ vpc_region }}" # not needed with vpc_id
    rules:
      - proto: icmp
        from_port: -1
        to_port: -1
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: Allow ICMP Ping
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: Allow SSH
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: Allow HTTP
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0 # any
        rule_desc: Allow HTTPS
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0 # any
    tags:
      Name: sg_icmp_ssh_www
      owner: "{{ owner }}"
      project: "{{ project_name }}"
      started: "{{ '%Y%m%dT%H%M%S-%Z' | strftime }}"
  register: sg_icmp_ssh_www
