---
# tasks file for roles/ise_config_backup_now
#------------------------------------------------------------------------------
# Requires an ISE Repository.
# Defaults:
# - ise_repository_name = the first ISE repository name
# - ise_backup_name_prefix = "NOW"
# - ise_backup_encryption_key = ISEisC00L
# Sets the following variables:
# - ise_repository_name
# - ise_backup_filename
#------------------------------------------------------------------------------


- name: Role Assertions
  ansible.builtin.assert:
    that:
      - ise_repository_name is defined
      - ise_repository_name != ''
      - ise_backup_encryption_key is defined
      - ise_backup_encryption_key != ''
  register: role_assertions

#------------------------------------------------------------------------------
# Backup Now
#------------------------------------------------------------------------------
- name: ISE Configuration Backup Now
  when: role_assertions.failed == false
  block:

    # 🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑
    # Do Not Use `cisco.ise.backup_config`
    # cisco.ise.backup_config 2.5.12 may exceed 60 seconds and throws a read timeout:
    # 'Socket error HTTPSConnectionPool(host=''1.2.3.4'', port=443): Read timed out. (read timeout=60)'
    # cisco.ise.backup_config does not support an extended timeout variable.
    # Maybe if it is improved it can be used.
    # 🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑
    # - name: ISE Configuration Backup Now | {{ ise_backup_name_prefix }} ⮕ {{ ise_repository_name }})
    #   cisco.ise.backup_config:
    #     ise_hostname: "{{ ansible_host }}"
    #     ise_username: "{{ ise_username | default( omit ) }}"
    #     ise_password: "{{ ise_password | default( omit ) }}"
    #     repositoryName: "{{ ise_repository_name }}"
    #     backupName: "{{ ise_backup_name_prefix }}"
    #     backupEncryptionKey: "{{ ise_backup_encryption_key }}"
    #   register: ise_backup_config_info
    #   failed_when: "'initiated' not in ise_backup_config_info.ise_response.response.message"
    #   ignore_errors: true # If we already initiated a backup, keep going!
    #
    #   # Example Backup Status:
    #   # ```
    #   # ise_backup_config_info:
    #   #   changed: false
    #   #   failed: false
    #   #   failed_when_result: false
    #   #   ise_response:
    #   #     response:
    #   #       id: e2566f60-2997-11ee-87e1-12f25cabfce7
    #   #       message: Config DB backup task initiated. Please use Task Service status API to get the status of the backup job
    #   #     version: 1.0.0
    #   # ```
    # 🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑

    - name: ISE Configuration Backup Now (⧖60s ➚300s) | {{ ise_backup_name_prefix }} ⮕ {{ ise_repository_name }})
      delegate_to: localhost
      ansible.builtin.uri:
        url: "https://{{ ansible_host }}/api/v1/backup-restore/config/backup"
        method: POST
        url_username: "{{ ise_username }}"
        url_password: "{{ ise_password }}"
        force_basic_auth: yes
        force: true # do not get a cached copy
        follow_redirects: safe
        body_format: json
        body: |
          {
            "repositoryName": "{{ ise_repository_name }}",
            "backupEncryptionKey": "{{ ise_backup_encryption_key }}",
            "backupName": "{{ ise_backup_name_prefix }}",
          }
        status_code: [
            202, # Config DB backup task initiated
            400, # Invalid Input: Invalid repository name, etc.
            401, # Unauthorized
            405, # A backup or restore is already in progress
          ]
        timeout: 300 # in seconds (10 minutes)
        validate_certs: "{{ lookup('env', 'ISE_VERIFY') | default(false) }}"
        return_content: true
      register: ise_backup_config_info
      failed_when: ise_backup_config_info.status != 202
      ignore_errors: true # Errors do not stop execution

      # Example ise_restore_status Results
      # ```
      # ise_restore_status:
      #   elapsed: 59
      #   json:
      #     response:
      #       id: f2cf6b20-2efc-11ee-9905-2a86f87504d1
      #       message: Config DB restore task initiated. Please use Task Service status API to get the status of the restore job
      #   status: 202
      # ```

    - name: ISE Configuration Backup Failed
      when: 
        - ise_backup_config_info is defined
        - ise_backup_config_info.status != 202
      ansible.builtin.fail:
        msg: |
          '{{ ise_backup_name_prefix }}' @ {{ inventory_hostname }} ({{ ansible_host }}) ⮕ {{ ise_repository_name }}
          {{ ise_backup_config_info }}

    - name: ISE Backup Banner '{{ ise_backup_name_prefix }}' @ {{ inventory_hostname }} ({{ ansible_host }}) ⮕ {{ ise_repository_name }}
      when: 
        - ise_backup_config_info is defined
        - ise_backup_config_info.json.response.id is defined
      ansible.builtin.pause:
        seconds: 0
        prompt: |
           
            ________   
             (    )    Node: {{ inventory_hostname }} ({{ ansible_host }}) 
              \../     Repo: {{ ise_repository_name }}
               )(      Started: {{ '%Y%m%dT%H%M%S-%Z' | strftime }}
              /  \     Task ID: {{ ise_backup_config_info.json.response.id }}
             (::::)    Text: {{ ise_backup_config_info.json.response.message }}
            --------   
           
              ISE Backup Started - This will take at least 10 minutes!
           

    # - name: Get ISE Backup Status | '{{ ise_backup_name_prefix }}' for {{ inventory_hostname }} ({{ ansible_host }}) ⮕ {{ ise_repository_name }}
    #   cisco.ise.backup_last_status_info:
    #     ise_hostname: "{{ ansible_host }}"
    #     ise_username: "{{ ise_username | default( omit ) }}"
    #     ise_password: "{{ ise_password | default( omit ) }}"
    #   register: ise_backup_status

    # - name: Show `ise_backup_status`
    #   ansible.builtin.debug:
    #     var: ise_backup_status

    - name: ISE Backup '{{ ise_backup_name_prefix }}' In Progress
      cisco.ise.backup_last_status_info:
        ise_hostname: "{{ ansible_host }}"
        ise_username: "{{ ise_username | default( omit ) }}"
        ise_password: "{{ ise_password | default( omit ) }}"
      delay: 10 # seconds to wait between retries
      retries: 360 # 360 * 10 seconds = 3600s == 1 hour
      register: ise_backup_status
      until: ise_backup_status.ise_response.status != 'IN_PROGRESS'
      failed_when: ise_backup_status.ise_response.justComplete != 'yes'

      #----------------------------------------------------------------------------
      # Example ise_backup_status Results
      #----------------------------------------------------------------------------
      # ```
      # ise_backup_status:
      #   ise_response:
      #     action: BACKUP
      #     details: Starting Backup
      #     error: 'false'
      #     hostName: ise.securitydemo.net
      #     initiatedFrom: OPEN_API
      #     justComplete: 'no'
      #     message: Backup is in progress...
      #     name: 20220911-212308
      #     percentComplete: '10'
      #     repository: FTP_dCloud_Ubuntu
      #     scheduled: 'no'
      #     startDate: Mon Sep 12 04:23:11 UTC 2022
      #     status: IN_PROGRESS
      #     type: CONFIGURATION_DB
      #
      # ise_backup_status:
      #   ise_response:
      #     action: BACKUP
      #     details: Backing up ISE Configuration Data
      #     error: 'false'
      #     hostName: ise.securitydemo.net
      #     initiatedFrom: OPEN_API
      #     justComplete: 'no'
      #     message: Backup is in progress...
      #     name: 20220911-212308
      #     percentComplete: '20'
      #     repository: FTP_dCloud_Ubuntu
      #     scheduled: 'no'
      #     startDate: Mon Sep 12 04:23:11 UTC 2022
      #     status: IN_PROGRESS
      #     type: CONFIGURATION_DB
      #
      # ise_backup_status:
      #   ise_response:
      #     action: BACKUP
      #     details: Backing up ISE Indexing Engine Data
      #     error: 'false'
      #     hostName: ise.securitydemo.net
      #     initiatedFrom: OPEN_API
      #     justComplete: 'no'
      #     message: Backup is in progress...
      #     name: 20220911-212308
      #     percentComplete: '45'
      #     repository: FTP_dCloud_Ubuntu
      #     scheduled: 'no'
      #     startDate: Mon Sep 12 04:23:11 UTC 2022
      #     status: IN_PROGRESS
      #     type: CONFIGURATION_DB
      #
      # ise_backup_status:
      #   ise_response:
      #     action: BACKUP
      #     details: null
      #     error: 'false'
      #     hostName: ise.securitydemo.net
      #     initiatedFrom: OPEN_API
      #     justComplete: 'yes'
      #     message: 'backup 20220911-212308-CFG10-220912-0423.tar.gpg to repository FTP_dCloud_Ubuntu: success'
      #     name: 20220911-212308
      #     percentComplete: null
      #     repository: FTP_dCloud_Ubuntu
      #     scheduled: 'no'
      #     startDate: Mon Sep 12 04:23:11 UTC 2022
      #     status: COMPLETED
      #     type: CONFIGURATION_DB
      #
      # ise_backup_status:
      #   attempts: 46
      #   changed: false
      #   failed: false
      #   failed_when_result: false
      #   ise_response:
      #     action: BACKUP
      #     details: null
      #     error: 'false'
      #     hostName: iseee.trust0.net
      #     initiatedFrom: OPEN_API
      #     justComplete: 'yes'
      #     message: 'backup NOW-CFG10-230723-1447.tar.gpg to repository ftp.trust0.net: success'
      #     name: NOW
      #     percentComplete: null
      #     repository: ftp.trust0.net
      #     scheduled: 'no'
      #     startDate: Sun Jul 23 14:47:05 PDT 2023
      #     status: COMPLETED
      #     type: CONFIGURATION_DB
      # ```

    - name: Show ISE Backup Status Failure
      when:
        - ise_backup_status is defined
        - ise_backup_status.failed
      ansible.builtin.debug:
        var: ise_backup_status.ise_response
      ignore_errors: true

    # 💡 Set ise_*_filename as a convenience for other roles
    - name: Set `ise_backup_filename` and `ise_restore_filename`
      when: 
        - ise_backup_status is defined
        - ise_backup_status.failed == false
        - ise_backup_status.ise_response is defined
        - ise_backup_status.ise_response.message is defined
      ansible.builtin.set_fact:
        # message: 'backup ISEEE-CFG10-230723-1628.tar.gpg to repository ftp.trust0.net: success'
        ise_backup_filename: "{{ ise_backup_status.ise_response.message.split(' ')[1] }}"
        ise_restore_filename: "{{ ise_backup_status.ise_response.message.split(' ')[1] }}"
      ignore_errors: true

    - name: ISE Configuration Backup Status | {{ ise_backup_name_prefix }}
      ansible.builtin.pause:
        seconds: 30 # 💡 Pause and allow for the ISE Backup & Restore screen to update
        prompt: |
           
                  .           Node: {{ inventory_hostname }} ({{ ansible_host }})
                 /|\          Repo: {{ ise_backup_status.ise_response.repository }}
             @  /|||\  @      Type: {{ ise_backup_status.ise_response.type }}
            @  /|||||\  @     Fail: {{ ise_backup_status.failed }}
            @  \|/ \|/  @     Text: {{ ise_backup_status.ise_response.message }}
             @.       .@      ise_backup_filename: {{ ise_backup_filename | default('None') }}
              `Y@ @ @Y`       ise_restore_filename: {{ ise_restore_filename | default('None') }}
                              
                              Pausing 30 seconds for ISE Backup to finish ...
           
      ignore_errors: true
