---
# tasks file for ssh_key_local

- name: Assert SSH Requirements
  delegate_to: localhost
  ansible.builtin.assert:
    that:
      - ssh_key_directory is defined
      - ssh_key_name is defined
      - ssh_key_size is defined
      - ssh_key_type is defined
      - ssh_key_private_file is defined
      - ssh_key_public_file is defined
  register: ssh_assertion

# âš  Python bcrypt module required on localhost to generate SSH keypair
- name: Install Python bcrypt Package
  delegate_to: localhost
  ansible.builtin.pip:
    name: bcrypt
    executable: pip3

- name: Local SSH Private Key Existence | {{ ssh_key_private_file }}
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ ssh_key_private_file }}"
  register: ssh_private_key_stat

- name: Create SSH Keypair | {{ ssh_key_name }}
  block:
    - name: Create SSH Keypair Passphrase
      when:
        - ssh_private_key_stat.stat.exists is false
        - ssh_key_passphrase is undefined
      block:

        - name: SSH Key Passphrase
          delegate_to: localhost
          ansible.builtin.pause:
            echo: no
            prompt: Enter your SSH Keypair Passphrase
          register: input

        - name: Set `ssh_key_passphrase`
          delegate_to: localhost
          ansible.builtin.set_fact:
            ssh_key_passphrase: "{{ input.user_input }}"

    - name: Generate OpenSSH Keypair
      when: ssh_private_key_stat.stat.exists is false
      delegate_to: localhost
      community.crypto.openssh_keypair:
        state: present
        type: "{{ ssh_key_type }}"
        path: "{{ ssh_key_private_file }}"
        passphrase: "{{ ssh_key_passphrase }}"
        mode: 0600 # SSH key permissions
        size: "{{ ssh_key_size }}"
        comment: "{{ ssh_key_name }}"
      register: keypair
